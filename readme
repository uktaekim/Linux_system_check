이름 : readme.txt
기록 날짜 : 2020.02.10
사용 환경 : Redhat 계열 리눅스 6,7버전

(1) 스크립트 개요

- 해당 스크립트는 2가지의 범주를 기준으로 시스템을 점검합니다.
- 첫번째, 일반적으로 변하지 않는 값 (설치된 패키지들, 네트워크 인터페이스 정보, 디스크 정보 등)
- 두번째, 상시 변하는 값 (파일시스템 사용률, 성능정보, 프로세스 등)
- 이 두가지를 가지고 전체 시스템 상태를 확인합니다.


(2) 스크립트 시작 방법

- Linux_System_check_IBM.sh 를 서버에 다운받고, 실행권한을 준 후 실행.
- 최초 실행시 로그 수집을 위한 디렉토리가 생성됩니다. (/IBM_System_check/)
- 최초 실행시 Linux_System_check_IBM.sh 가 어디에 있던지 실행 후 해당 스크립트 파일은 /IBM_System_check 로 이동합니다.
- 따라서 이후 실행할 때는 /IBM_System_check/Linux_System_check_IBM.sh 경로에서 실행해야 합니다.

* 참고 : 필요한 경우, 스크립트에서 사용하는 명령 설치
- 일반적으로 서버에 기본 설치되어있는 tool들이나, 혹시 없는 경우, 아래 패키지 설치가 필요합니다.
     - net-tools (netstat, route 명령)
     - sysstat, lm_sensors-libs(sar 명령)
     - pciutils (lspci 명령)
     - lsscsi (lsscsi 명령)
- 해당 패키지가 없는 경우, 에러 메시지는 뜨지만 스크립트 진행은 문제 없습니다. 다만 위에 해당하는 명령어들의 정보가 저장되지 않습니다.
- 해당 패키지들은 https://access.redhat.com/downloads/ 에서 다운받을 수 있습니다.


(3) 스크립트 구조

* 스크립트 환경 디렉토리 생성
- /IBM_System_check : 점검 스크립트 루트 디렉토리입니다.
- /IBM_System_check/Resource : "일반적으로 변하지 않는 값"들을 월별로 저장합니다. 
- /IBM_System_check/Result : 스크립트 결과값이 저장됩니다. 해당 내용을 엔지니어에게 전달해주면 점검을 수행합니다.

* 점검 스크립트
- shell script를 기반으로 시스템 점검 명령어들을 수행합니다.
- "일반적으로 변하지 않는 값"들을 이전 데이터와 비교하여 변경이 있는 경우 출력합니다.
- "상시 변하는 값"들을 출력합니다.
-  /IBM_System_check/Result 에 yyyymmdd-hhmmss.호스트명.system_check.log 로 저장됩니다.


(4) 스크립트 실행 방법

* 기본 실행 방법
- 루트 유저의 권한으로 아래 스크립트를 실행.
- /IBM_System_check/Linux_System_check_IBM.sh

* 정기 실행 방법
- 크론탭에 등록하여 사용 (루트에서, crontab -e)
- 예시 : 매달 1일 새벽 5시에 스크립트 실행
- 0 5 1 * * /IBM_System_check/Linux_System_check_IBM.sh


(5) 점검 방식

* 일반적으로 변하지 않는 값
- 변경작업 없이는 변경되지 않는 명령어 결과값(lspci, lsmod, dmidecode, cpuinfo, grub 등등)들을 추출합니다.
- 이전에 추출한 해당 명령어 결과값들과 현재 추출한 해당 명령어 결과값들을 비교하여 변동사항이 있는 경우 내용을 출력합니다.

* 상시 변하는 값
- 상시 변경되는 명령어 결과값(free, df, messages 등)을 스크립트로 수행하여 결과를 출력합니다.
 

(6) 주의 및 참고사항

- 설치 스크립트, 점검 스크립트 모두 시스템의 특정 값을 변경하거나 영향을 주지 않습니다. 단순히 디렉토리나 파일을 생성할 뿐입니다.
- 매 달, 저장되는 "일반적으로 변하지 않는 값"의 용량은 약 300~600KB 전후가 됩니다.
- 매 달, 저장되는 점검 결과값은 시스템 상황에 따라 다르지만 400KB 전후가 됩니다.
- 최초로 스크립트를 실행 시, "일반적으로 변하지 않는 값" 부분의 이전 데이터가 없기 때문에 diff 에러가 발생합니다. 이 에러는 무시하시면 됩니다.
- 이후 다음달 점검시에는 이전 데이터(전월)를 가지고 현재 데이터와 비교하므로 에러가 발생하지 않습니다.


(7) 이 스크립트의 이점

- 해당 점검 스크립트를 통해 단순히 현재 상태에 대한 점검을 포함하여, 일정 주기로 서버 내 중요 내용의 변동 사항들을 확인할 수 있습니다.
- 이러한 변동 사항을 점검함으로써 사전에 발생 가능성이 있는 문제들을 확인하고 예방할 수 있습니다.
- 또한 장애 발생시 저장된 이전 주요 내용들을 가지고 변동사항을 비교하여 원인 분석을 좀 더 원활하고 빠르게 진행할 수 있습니다.

